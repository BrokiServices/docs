{
  "openapi": "3.1.0",
  "info": {
    "title": "OpenAPI Plant Store",
    "description": "A sample API that uses a plant store as an example to demonstrate features in the OpenAPI specification",
    "license": {
      "name": "MIT"
    },
    "version": "1.0.0"
  },
  "servers": [
    {
      "url": "https://backend-callhq-385086326930.asia-south1.run.app/api"
    }
  ],
  "security": [
    {
      "bearerAuth": []
    }
  ],
  "paths": {
    "/auth/login": {
      "post": {
        "summary": "Get Authentication Token",
        "tags": [
          "Auth"
        ],
        "security": [], 
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "required": [
                  "email",
                  "password"
                ],
                "properties": {
                  "email": {
                    "type": "string"
                  },
                  "password": {
                    "type": "string"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Login successful"
          }
        }
      }
    },
    "/calls": {
      "get": {
        "summary": "List Calls",
        "tags": [
          "Calls"
        ],
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "parameters": [
          {
            "in": "query",
            "name": "id",
            "schema": {
              "type": "string"
            },
            "description": "Filter by specific call ID."
          },
          {
            "in": "query",
            "name": "assistantId",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Filter by assistant ID."
          },
          {
            "in": "query",
            "name": "phoneNumberId",
            "schema": {
              "type": "string"
            },
            "description": "Filter by phone number ID."
          },
          {
            "in": "query",
            "name": "limit",
            "schema": {
              "type": "integer"
            },
            "description": "Maximum number of call records to return."
          },
          {
            "in": "query",
            "name": "createdAtGe",
            "schema": {
              "type": "string",
              "format": "date-time"
            },
            "description": "Filter for calls created on or after this date/time."
          },
          {
            "in": "query",
            "name": "createdAtLe",
            "schema": {
              "type": "string",
              "format": "date-time"
            },
            "description": "Filter for calls created on or before this date/time."
          }
        ],
        "responses": {
          "200": {
            "description": "List of call records retrieved successfully.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string"
                    },
                    "calls": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "id": {
                            "type": "string"
                          },
                          "assistantId": {
                            "type": "string"
                          },
                          "phoneNumberId": {
                            "type": "string"
                          },
                          "createdAt": {
                            "type": "string"
                          },
                          "updatedAt": {
                            "type": "string"
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "500": {
            "description": "Error fetching call records."
          }
        }
      }
    },
    "/calls/outbound": {
      "post": {
        "summary": "Place Outbound Call",
        "tags": [
          "Calls"
        ],
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "required": [
                  "assistantId",
                  "phoneNumberId",
                  "customer"
                ],
                "properties": {
                  "assistantId": {
                    "type": "string",
                    "description": "Local assistant ID"
                  },
                  "phoneNumberId": {
                    "type": "string",
                    "description": "Local phone number ID"
                  },
                  "customer": {
                    "type": "object",
                    "required": [
                      "number",
                      "name"
                    ],
                    "properties": {
                      "number": {
                        "type": "string",
                        "example": "+919876543210"
                      },
                      "name": {
                        "type": "string"
                      }
                    }
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Call placed successfully"
          },
          "400": {
            "description": "Missing required fields"
          },
          "404": {
            "description": "Assistant or Phone number not found"
          },
          "500": {
            "description": "Failed to initiate call"
          }
        }
      }
    },
    "/calls/details": {
  "get": {
    "summary": "Get Call Details",
    "tags": ["Calls"],
    "security": [
      {
        "bearerAuth": []
      }
    ],
    "parameters": [
      {
        "in": "query",
        "name": "id",
        "schema": {
          "type": "string"
        },
        "description": "Filter by specific call ID."
      }
    ],
    "responses": {
      "200": {
        "description": "List of call records retrieved successfully.",
        "content": {
          "application/json": {
            "schema": {
              "type": "object",
              "properties": {
                "message": {
                  "type": "string"
                },
                "calls": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "id": {
                        "type": "string"
                      },
                      "assistantId": {
                        "type": "string"
                      },
                      "phoneNumberId": {
                        "type": "string"
                      },
                      "createdAt": {
                        "type": "string"
                      },
                      "updatedAt": {
                        "type": "string"
                      }
                    }
                  }
                }
              }
            }
          }
        }
      },
      "500": {
        "description": "Error fetching call records."
      }
    }
  }
},
    "/assistants": {
      "get": {
        "summary": "List Assistants",
        "tags": [
          "Assistants"
        ],
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "parameters": [
          {
            "in": "query",
            "name": "limit",
            "schema": {
              "type": "integer"
            },
            "description": "Number of results per page"
          },
          {
            "in": "query",
            "name": "page",
            "schema": {
              "type": "integer"
            },
            "description": "Page number"
          },
          {
            "in": "query",
            "name": "organizationId",
            "schema": {
              "type": "string"
            },
            "description": "(Super Admins only) Filter assistants by organization ID"
          }
        ],
        "responses": {
          "200": {
            "description": "List of assistants retrieved"
          }
        }
      },
      "post": {
        "summary": "Create Assistant",
        "tags": [
          "Assistants"
        ],
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "required": [
                  "name",
                  "voice",
                  "transcriber",
                  "model",
                  "firstMessage",
                  "firstMessageMode"
                ],
                "properties": {
                  "name": {
                    "type": "string",
                    "example": "Test Assistant"
                  },
                  "voice": {
                    "type": "object",
                    "properties": {
                      "provider": {
                        "type": "string",
                        "enum": [
                          "CallHQ"
                        ],
                        "example": "CallHQ"
                      },
                      "voiceId": {
                        "type": "string",
                        "enum": [
                          "Paige",
                          "Rohan",
                          "Hana",
                          "Elliot",
                          "Kylie",
                          "Savannah",
                          "Cole",
                          "Harry",
                          "Spencer",
                          "Neha",
                          "Lily"
                        ],
                        "example": "Priya"
                      },
                      "speed": {
                        "type": "number",
                        "example": 1
                      }
                    }
                  },
                  "transcriber": {
                    "type": "object",
                    "properties": {
                      "provider": {
                        "type": "string",
                        "example": "google"
                      },
                      "model": {
                        "type": "string",
                        "example": "gemini-1.5-pro"
                      },
                      "language": {
                        "type": "string",
                        "example": "Multilingual"
                      }
                    }
                  },
                  "model": {
                    "type": "object",
                    "properties": {
                      "provider": {
                        "type": "string",
                        "example": "google"
                      },
                      "model": {
                        "type": "string",
                        "example": "gemini-1.5-pro"
                      },
                      "temperature": {
                        "type": "number",
                        "example": 0.5
                      },
                      "maxTokens": {
                        "type": "integer",
                        "example": 250
                      },
                      "emotionRecognitionEnabled": {
                        "type": "boolean",
                        "example": false
                      },
                      "messages": {
                        "type": "array",
                        "items": {
                          "type": "object",
                          "properties": {
                            "role": {
                              "type": "string",
                              "example": "system"
                            },
                            "content": {
                              "type": "string",
                              "example": "This is a blank template with minimal defaults, you can change the model, temperature, and messages."
                            }
                          }
                        }
                      }
                    }
                  },
                  "firstMessage": {
                    "type": "string",
                    "example": "Hello."
                  },
                  "firstMessageMode": {
                    "type": "string",
                    "example": "assistant-speaks-first"
                  },
                  "backgroundSound": {
                    "type": "string",
                    "example": "office"
                  },
                  "silenceTimeoutSeconds": {
                    "type": "integer",
                    "example": 10
                  },
                  "backgroundDenoisingEnabled": {
                    "type": "boolean",
                    "example": true
                  },
                  "firstMessageInterruptionsEnabled": {
                    "type": "boolean",
                    "example": false
                  },
                  "maxDurationSeconds": {
                    "type": "integer",
                    "example": 3600
                  }
                }
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Assistant created successfully"
          },
          "400": {
            "description": "Validation error or missing integration"
          },
          "500": {
            "description": "Internal server error"
          }
        }
      }
    },
    "/assistants/{id}": {
      "get": {
        "summary": "Get Assistant",
        "tags": [
          "Assistants"
        ],
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Assistant ID"
          }
        ],
        "responses": {
          "200": {
            "description": "Assistant retrieved successfully"
          },
          "404": {
            "description": "Assistant not found"
          }
        }
      },
      "patch": {
        "summary": "Update Assistant",
        "tags": [
          "Assistants"
        ],
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Assistant ID"
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "description": "Fields to update. Only `name`, `status`, and `description` will be updated locally.",
                "properties": {
                  "name": {
                    "type": "string",
                    "example": "Updated Assistant"
                  },
                  "status": {
                    "type": "boolean",
                    "example": true
                  },
                  "description": {
                    "type": "string",
                    "example": "This assistant handles hospitality queries."
                  },
                  "voice": {
                    "type": "object",
                    "properties": {
                      "provider": {
                        "type": "string",
                        "enum": [
                          "CallHQ"
                        ],
                        "example": "CallHQ"
                      },
                      "voiceId": {
                        "type": "string",
                        "enum": [
                          "Paige",
                          "Rohan",
                          "Hana",
                          "Elliot",
                          "Kylie",
                          "Savannah",
                          "Cole",
                          "Harry",
                          "Spencer",
                          "Neha",
                          "Lily"
                        ],
                        "example": "Neha"
                      },
                      "speed": {
                        "type": "number",
                        "example": 1
                      }
                    }
                  },
                  "model": {
                    "type": "object",
                    "properties": {
                      "provider": {
                        "type": "string",
                        "enum": [
                          "google",
                          "openai",
                          "anthropic"
                        ],
                        "example": "google"
                      },
                      "model": {
                        "type": "string",
                        "example": "gemini-1.5-pro"
                      },
                      "temperature": {
                        "type": "number",
                        "example": 0.5
                      },
                      "maxTokens": {
                        "type": "integer",
                        "example": 250
                      },
                      "emotionRecognitionEnabled": {
                        "type": "boolean",
                        "example": false
                      },
                      "messages": {
                        "type": "array",
                        "items": {
                          "type": "object",
                          "properties": {
                            "role": {
                              "type": "string",
                              "example": "system"
                            },
                            "content": {
                              "type": "string",
                              "example": "This is a blank template with minimal defaults, you can change the model, temperature, and messages."
                            }
                          }
                        }
                      }
                    }
                  },
                  "firstMessage": {
                    "type": "string",
                    "example": "Hi! How can I help you today?"
                  },
                  "firstMessageMode": {
                    "type": "string",
                    "enum": [
                      "assistant-speaks-first",
                      "user-speaks-first"
                    ],
                    "example": "assistant-speaks-first"
                  },
                  "backgroundSound": {
                    "type": "string",
                    "example": "office"
                  },
                  "silenceTimeoutSeconds": {
                    "type": "integer",
                    "example": 10
                  },
                  "backgroundDenoisingEnabled": {
                    "type": "boolean",
                    "example": true
                  },
                  "firstMessageInterruptionsEnabled": {
                    "type": "boolean",
                    "example": false
                  },
                  "maxDurationSeconds": {
                    "type": "integer",
                    "example": 3600
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Assistant updated successfully"
          },
          "404": {
            "description": "Assistant not found"
          }
        }
      }
    }
  },
  "webhooks": {},
  "components": {
    "schemas": {
      "Plant": {
        "required": [
          "name"
        ],
        "type": "object",
        "properties": {
          "name": {
            "description": "The name of the plant",
            "type": "string"
          },
          "tag": {
            "description": "Tag to specify the type",
            "type": "string"
          }
        }
      },
      "NewPlant": {
        "allOf": [
          {
            "$ref": "#/components/schemas/Plant"
          },
          {
            "required": [
              "id"
            ],
            "type": "object",
            "properties": {
              "id": {
                "description": "Identification number of the plant",
                "type": "integer",
                "format": "int64"
              }
            }
          }
        ]
      },
      "Error": {
        "required": [
          "error",
          "message"
        ],
        "type": "object",
        "properties": {
          "error": {
            "type": "integer",
            "format": "int32"
          },
          "message": {
            "type": "string"
          }
        }
      }
    },
    "securitySchemes": {
      "bearerAuth": {
        "type": "http",
        "scheme": "bearer"
      }
    }
  }
}